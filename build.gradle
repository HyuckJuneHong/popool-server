//Build
buildscript {
    ext{
        //ext: build.gradle 에서 사용하는 전역 변수 설정
        springBootVersion = '2.6.7'
        springDependencyManagementVersion = '1.0.11.RELEASE'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
    }

//    configurations {
//        compileOnly {
//            extendsFrom annotationProcessor
//        }
//    }
}

allprojects {
    /*
        전체 프로젝트 내 전체 모듈 공통 설정
        -root project 까지 설정이 필요한 경우 사용.
     */
}

//Sub Project 내 전체 모듈 공통 설정
subprojects {
    group 'kr.co.popoolserver'

    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    repositories {
        mavenCentral()
    }

    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'

    ext{
        springBootVersion = '2.6.7'
        springDependencyManagementVersion = '1.0.11.RELEASE'
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

    // sub-project 등록시 디렉토리가 존재하지 않으면 자동 생성
    task initSourceFolders {
        sourceSets*.java.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
        sourceSets*.resources.srcDirs*.each {
            if (!it.exists()) {
                it.mkdirs()
            }
        }
    }
}

project(':p-application'){
    dependencies {
        implementation project(':p-internal')
        implementation project(':p-domain-admin')
        implementation project(':p-domain-consumer')
        implementation project(':p-domain-jwt')
        implementation project(':p-domain-redis')
        implementation project(':p-domain-s3')
        implementation project(':p-core')

        implementation 'org.springframework.boot:spring-boot-starter-web'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        //Swagger & Validation
        implementation 'io.springfox:springfox-boot-starter:3.0.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
    }
}

project(':p-internal'){
    dependencies {
        implementation project(':p-core')

        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':p-domain-admin'){
    dependencies {
        implementation project(':p-core')
        implementation project(':p-domain-jwt')
        implementation project(':p-domain-redis')
        implementation project(':p-domain-s3')

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        //DB
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'

        //Swagger & Validation
        implementation 'io.springfox:springfox-boot-starter:3.0.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        //Security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        testImplementation 'org.springframework.security:spring-security-test'
    }
}

project(':p-domain-consumer'){
    dependencies {
        implementation project(':p-core')
        implementation project(':p-domain-jwt')
        implementation project(':p-domain-redis')
        implementation project(':p-domain-s3')

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        //thymeleaf
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

        //DB
        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'mysql:mysql-connector-java'

        //Swagger & Validation
        implementation 'io.springfox:springfox-boot-starter:3.0.0'
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        //Security
        implementation 'org.springframework.boot:spring-boot-starter-security'
        testImplementation 'org.springframework.security:spring-security-test'
    }

    project(':p-domain-jwt'){
        dependencies {
            implementation project(':p-core')

            implementation 'org.springframework.boot:spring-boot-starter-web'
            
            //JWT
            implementation 'io.jsonwebtoken:jjwt:0.9.1'
        }
    }

    project(':p-domain-redis'){
        dependencies {
            implementation project(':p-core')

            implementation 'org.springframework.boot:spring-boot-starter-web'

            //redis
            implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        }
    }

    project(':p-domain-s3'){
        dependencies {
            implementation project(':p-core')

            implementation 'org.springframework.boot:spring-boot-starter-web'

            //aws
            implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.341'
        }
    }

    project(':p-core'){
        bootJar.enabled = false
        jar.enabled = true

        dependencies {
        }
    }
}