##Github Repository Actions Name
#name: Java CI with Gradle
#
##Event Trigger
#on:
#  push:
#    branches:
#      - main
#
#  workflow_dispatch:
#
#permissions:
#  contents: read
#
#jobs:
#  build-application:
#    runs-on: ubuntu-20.04
#    steps:
#      - name: Checkout Latest Repository
#        uses: actions/checkout@master
#
#      #JDK Setting
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      #Gradle Caching
#      - name: Gradle Caching
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      #Create application-local.yml
#      - name: Make application-local.yml
#        run: |
#          cd ./p-application/src/main/resources
#          touch ./application.yml
#          echo "${{ secrets.YAML_LOCAL }}" > ./application.yml
#        shell: bash
#
#      #Gradle Build
#      - name: Build with Gradle
#        run: ./gradlew build -x test
#
#      #Docker Build & Push to local
#      - name: Docker build & push to local
#        run: |
#          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
#          docker build -t ${{ secrets.DOCKERHUB_ID_REPOSITORY }} .
#          docker push ${{ secrets.DOCKERHUB_ID_REPOSITORY }}
#
#      #Deploy to local (Beanstalk 플러그인 사용, IAM 인증키 사용)
#      - name: Beanstalk Deploy to local
#        uses: einaregilsson/beanstalk-deploy@v20
#        with:
#          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#          application_name: Popool-SpringBoot-WebServiceEnvironmentTier
#          environment_name: Popool-WebServiceEnvironmentTier
#          region: ${{ secrets.AWS_REGION }}
#          deployment_package: Dockerrun.aws.json